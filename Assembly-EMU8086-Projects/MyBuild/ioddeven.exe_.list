EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
ioddeven.exe_ -- emu8086 assembler version: 4.08  
 
[ 5/7/2021  --  1:25:36 AM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       .model small
[   2]        :                                       .data
[   3]    0000: 0A 0D 45 6E 74 65 72 20 4E 75 6D 62   	msg1 db 10,13,"Enter Number: $"
                65 72 3A 20 24                      
[   4]    0011: 0A 0D 4E 75 6D 62 65 72 20 69 73 20   	msg2 db 10,13,"Number is Even$"
                45 76 65 6E 24                      
[   5]    0022: 0A 0D 4E 75 6D 62 65 72 20 69 73 20   	msg3 db 10,13,"Number is Odd$"
                4F 64 64 24                         
[   6]        :                                       .code
[   7]    0040:                                       main proc
[   8]    0040: B8 00 00                              	mov ax,@data
[   9]    0043: 8E D8                                 	mov ds,ax
[  10]        :                                       	
[  11]    0045: BA 00 00                              	lea dx,msg1
[  12]    0048: B4 09                                 	mov ah,9
[  13]    004A: CD 21                                 	int 21h
[  14]        :                                       	
[  15]    004C: B4 01                                 	mov ah,1
[  16]    004E: CD 21                                 	int 21h
[  17]        :                                       
[  18]    0050: B3 02                                 	mov bl,2
[  19]    0052: F6 F3                                 	div bl
[  20]    0054: 80 FC 00                              	cmp ah,0
[  21]        :                                       	;je even
[  22]    0057: BA 22 00                              	lea dx,msg3
[  23]    005A: B4 09                                 	mov ah,9
[  24]    005C: CD 21                                 	int 21h
[  25]        :                                       
[  26]    005E: B4 4C                                 	mov ah,4ch
[  27]    0060: CD 21                                 	int 21h
[  28]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 62      -   bytes on last page (l.byte)
0003: 00      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 00      -   SP - stack pointer (h.byte)
0012: 41      -   check sum (l.byte)
0013: 62      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 04      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 04      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
