EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
8bitDivision.exe_ -- emu8086 assembler version: 4.08  
 
[ 4/22/2021  --  2:53:09 PM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       
[   2]        :                                       ; PROGRAM TO DIVIDE TWO 8 BIT NUMBERS
[   3]        :                                       .MODEL SMALL
[   4]        :                                       .DATA
[   5]    0000: 00                                    REM DB 0
[   6]    0001: 00                                    QUO DB 0
[   7]        :                                       .CODE
[   8]    0010: B8 06 00                              MOV AX , 06  ; Dividend is always AX and greater than divisor
[   9]    0013: B3 05                                 MOV BL , 05   ; Divisor
[  10]        :                                       
[  11]    0015: F6 F3                                 DIV BL       ; Divide 26/5
[  12]        :                                       
[  13]    0017: 88 26 01 00                           MOV QUO , AH ; Moving Quotient from AH to QUO variable
[  14]    001B: A2 00 00                              MOV REM , AL ; Moving Quotient from AL to REM variable
[  15]        :                                       
[  16]    001E: B4 4C                                 MOV AH , 4CH ; EXIT
[  17]    0020: CD 21                                 INT 21H
[  18]        :                                       END
[  19]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 22      -   bytes on last page (l.byte)
0003: 00      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 00      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 00      -   SP - stack pointer (h.byte)
0012: F8      -   check sum (l.byte)
0013: 5A      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 01      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E to 01FF  -   reserved relocation area  (00) 




===================================================================================================
